//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_simpledwemoapp
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of simpleDwemoApp generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_simpledwemoapp.h"
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'simpleDwemoApp definitions' algorithm generated code

//End of 'simpleDwemoApp definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_simpledwemoapp::cfm_simpledwemoapp(sc_core::sc_module_name name) :
		cf_application(name), mq_MsgQ("MsgQ") {
	cf_application::init();

	Consumer = new cfm_consumer("Consumer");

	Producer = new cfm_producer("Producer");

	// connections
	Consumer->p_mq_MsgQ(mq_MsgQ.p_target_socket);
	Producer->p_mq_MsgQ(mq_MsgQ.p_target_socket);

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'simpleDwemoApp constructor' algorithm generated code

	//End of 'simpleDwemoApp constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_application::elab_end();
}
//@}

/// \name destructor
//@{
cfm_simpledwemoapp::~cfm_simpledwemoapp(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'simpleDwemoApp destructor' algorithm generated code

	//End of 'simpleDwemoApp destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	delete Consumer;
	delete Producer;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_simpledwemoapp::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'simpleDwemoApp pre elaboration' algorithm generated code

	//End of 'simpleDwemoApp pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_simpledwemoapp::cb_end_of_elaboration(void) {
//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'simpleDwemoApp post elaboration' algorithm generated code

//End of 'simpleDwemoApp post elaboration' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_simpledwemoapp::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'simpleDwemoApp post simulation' algorithm generated code

	//End of 'simpleDwemoApp post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

}
//@}

/// \name initialize attributes
//@{
void cfm_simpledwemoapp::cb_init_attributes() {

// initialize function attributes
	cfa_cycle_period.init(cf_expr_time(10, CF_NS));

// initialize relations attributes
	mq_MsgQ.cfa_send_time.init(cf_expr_duration(1, CF_NS));
	mq_MsgQ.cfa_receive_time.init(cf_expr_duration(1, CF_NS));
	mq_MsgQ.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_MsgQ.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_MsgQ.cfa_concurrency.init((cf_nonzero_count) 1);
	mq_MsgQ.cfa_send_threshold.init((cf_nonzero_count) 1);
	mq_MsgQ.cfa_receive_threshold.init((cf_nonzero_count) 1);

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_simpledwemoapp::cb_init_local_vars(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'simpleDwemoApp initializations' algorithm generated code

	//End of 'simpleDwemoApp initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>